}
for (col in seq_along(colnames)) {
ina <- training[, col] == -999.0
training <- training[!ina, ]
}
n_ina
training <- read.csv(training_f)
colnames <- colnames(training)
n_ina <- vector("integer", length = length(colnames))
for (col in seq_along(colnames)) {
ina <- training[, col] == -999.0
n_ina[col] <- sum(ina)
}
for (col in seq_along(colnames)) {
ina <- training[, col] == -999.0
training <- training[!ina, ]
}
n_ina
summary(training)
colnames
hist(training$DER_mass_MMC)
hist(training$DER_mass_transverse_met_lep)
s <- summary(training)
s
class()
class(s)
rm(list = ls())
training_f <- "training.csv"
# test_f <- "test.csv"
training <- read.csv(training_f)
colnames <- colnames(training)
n_ina <- vector("integer", length = length(colnames))
for (col in seq_along(colnames)) {
ina <- training[, col] == -999.0
n_ina[col] <- sum(ina)
}
for (col in seq_along(colnames)) {
ina <- training[, col] == -999.0
training <- training[!ina, ]
}
colnames
summary(training$EventId)
summary(training$Weight)
boxplot(training$Weight)
boxplot(training$Weight, col = blue)
boxplot(training$Weight, col = "blue")
colnames
boxplot(training$DER_sum_pt, col = "blue")
boxplot(training$DER_mass_MMC, col = "blue")
boxplot(training$DER_mass_vis, col = "blue")
boxplot(training$DER_pt_tot, col = "blue")
boxplot(training$DER_met, col = "blue")
boxplot(training$PRI_tau_eta, col = "blue")
boxplot(training$PRI_jet_num, col = "blue")
summary(training$PRI_tau_eta)
boxplot(training$DER_deltaeta_jet_jet, col = "blue")
summary(training$DER_deltaeta_jet_jet)
colnajmes
colnames
hist(training$DER_pt_tot, col = "green")
rug(training$DER_pt_tot)
hist(training$DER_pt_tot, col = "green", breaks = 100)
rug(training$DER_pt_tot)
boxplot(training$DER_deltaeta_jet_jet, col = "blue")
abline(h = 4)
abline(h = 1)
hist(training$DER_pt_tot, col = "green", breaks = 100)
rug(training$DER_pt_tot)
abline(v = 100)
abline(v = 200, lwd = 2)
abline(v = median(training$DER_pt_tot, col = "magenta", lwd = 4))
abline(v = median(training$DER_pt_tot), col = "magenta", lwd = 4)
abline(v = mean(training$DER_pt_tot), col = "red", lwd = 4)
x <- rnorm(1000)
hist(x, breaks = 20)
cat <- sample(c("cats", "dogs"), 1000)
?sample
cat <- sample(c("cats", "dogs"), 1000, replace = T)
head(cat)
tail(cat)
df <- data.frame()
df$value <- x
df$value <- null
df$value <- NULL
df$value <- x
df$value <- vector("numeric", length = 1000)
m <- matrix(x, cat)
df <- data.frame(x, cat)
colnames(df)
barplot(table(df$x), col = "wheat", main = "Some kinda silly props of cats and dogs")
class(df$cat)
boxplot(cats ~ dogs, data = df, col = "red")
colnames
boxplot(DER_mass_MMC ~ DER_mass_transverse_met_lep, data = training, col = "red")
boxplot(DER_mass_MMC ~ PRI_met_sumet, data = training, col = "red")
boxplot(training$DER_mass_MMC, col = "red")
boxplot(training$PRI_met_sumet, col = "red")
boxplot(DER_mass_MMC[1:1000] ~ PRI_met_sumet[1:1000], data = training, col = "red")
cut1 <- DER_mass_MMC[1:1000]
cut1 <- training$DER_mass_MMC[1:1000]
cut2 <- training$PRI_met_sumet[1:1000]
boxplot(cut1 ~ cut2, col = "red")
library(UsingR)
data(Arbuthnot)
colnames(Arbuthnot)
colnames(Arbuthnot)
barplot(table(Arbuthnot$Mortality), col = "wheat", main = "Title")
boxplot(Males ~ Females, data = Arbuthnot, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
View(Arbuthnot)
data(Galton)
colnames(Galton)
data(Minard)
data(Nightingale)
colnames(Nightingale)
View(Nightingale)
barplot(table(Nightingale$Disease.rate), col = "wheat", main = "Title")
barplot(table(Nightingale$Wounds.rate), col = "wheat", main = "Title")
barplot(table(Nightingale$Other.rate), col = "wheat", main = "Title")
par(mfrow = c(1))
par(mfrow = c(1, 1))
boxplot(Wounds ~ Other, data = Nightingale, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
colnames
hist(training$DER_mass_MMC, col = "green")
hist(training$PRI_met_phi, col = "green")
hist(training$DER_mass_MMC, col = "green")
hist(training$PRI_lep_eta, col = "green")
par(mfrow = c(1, 1))
colnames
with(training, plot(EventId, DER_mass_MMC))
with(Nightingale, plot(Year, Wounds, col = Month))
with(Nightingale, plot(Month, Wounds, col = Year))
with(Nightingale, plot(Month, Wounds))
with(Nightingale, plot(Month, Wounds, col = Year))
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
par(mfrow = c(3, 1))
with(subset(Nightingale, Year = 1854), plot(Month, Wounds))
class(Nightingale$Wounds)
with(subset(Nightingale, Year = 1855), plot(Month, Wounds))
par(mfrow = c(3, 1))
with(subset(Nightingale, Year = 1854), plot(Month, Wounds))
x = 1:1000
y = rnorm(1000)
plot(x, y)
rm(Arbuthnot, Galton, Nightingale, df)
rm(cat, col, cut1, cut2)
library(datasets)
data(cars)
with(cars, plot(speed, dist))
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
airquality <- transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = "Month")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col = Month)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col = airquality$Month)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
library(datasets)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
rm(airquality)
library(datasets)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
pairs(cars)
pairs(mpg)
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "red", lwd = 5))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "green", lwd = 3))
legend("topright", pch = 1, col = c("red", "green"), legend = c("May", "Other"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", pch = 20))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd = 3, col = "red")
par(mfrow = c(1, 2))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = T)
})
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd = 3, col = "red")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
model <- lm(Ozone ~ Solar.R, airquality)
abline(model, lwd = 3, col = "red")
plot(Temp, Ozone, main = "Ozone and Temperature")
model <- lm(Ozone ~ Solar.R, airquality)
abline(model, lwd = 3, col = "red")
})
?Devices
dev.curr()
dev.cur()
library(lattice)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(1, 5))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
set.seed(10)
x <- rnorm(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2, 1))
f
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
rep(0:5, each = 2)
library(ggplot2)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = .~drv, binwidth = 2)
str(maacs)
data(maacs)
View(state)
qplot(log(Population), data = state)
qplot(log(Life.Exp), data = state)
qplot(log(Area), data = state)
qplot(log(Area), data = state, fill = region)
qplot(log(Area), data = state, geom = "density")
qplot(log(Area), data = state, geom = "density", fill = region)
qplot(log(Area), data = state, geom = "density", color = region)
qplot(log(Area), data = state, geom = "density", fill = region)
qplot(log(Income), log(Life.Exp), data = state)
qplot(log(Income), log(Life.Exp), data = state, shape = Area)
qplot(log(Income), log(Life.Exp), data = state, shape = region)
qplot(log(Income), log(Life.Exp), data = state, color = region)
qplot(log(Income), log(Life.Exp), data = state, color = region, geom = c("point", "smooth"), method = "lm")
qplot(log(Income), log(Life.Exp), data = state, geom = c("point", "smooth"), method = "lm")
qplot(log(Income), log(Life.Exp), data = state, geom = c("point", "smooth"), facets = .~region)
qplot(Income, Murder, data = state, facets = . ~ region, geom = c("point", "smooth"), method = "lm")
g <- ggplot(state, aes(Income, Murder))
p <- g + geom_point()
p
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth("lm")
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth()
g + geom_point() + facet_grid(. ~ region) + geom_smooth(method = "lm")
g + geom_point() + facet_grid(. ~ region) + geom_smooth()
g + geom_point() + facet_grid(. ~ region) + geom_smooth(method = "lm") + theme_bw()
g + geom_point() + facet_grid(. ~ region) + geom_smooth(method = "lm") + theme_gray()
g + geom_point(color = "blue", size = 4, alpha = 0.5)
g + geom_point(aes(color = region), size = 4, alpha = 0.5)
g + geom_point(aes(color = region)) + labs(title = "Title") + labs(x = expression("log " * PM[2.5]), y = "y")
g + geom_point(aes(color = region)) + labs(title = "Title") + labs(x = expression("log " * PM{2.5}), y = "y")
g + geom_point(aes(color = region), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 3, method = "lm", se = F)
g + geom_point(aes(color = region), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 5, method = "lm", se = F)
g + geom_point(aes(color = region), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 4, method = "lm", se = F)
g + geom_point(aes(color = region), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 6, method = "lm", se = F)
g + geom_point(aes(color = region), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 1, method = "lm", se = F)
g + geom_point(aes(color = region), size = 2, alpha = 0.5) + geom_smooth(size = 4, linetype = 2, method = "lm", se = F)
g + geom_point(aes(color = region)) + theme_bw(base_family = "times")
testdat <- data.frame(x = 1:100, y = rnorm(100))
testdat[50, 2] <- 100
plot(testdat$x, testdat$y, type = "l", ylim = c(-3, 3))
g <- ggplot(testdat, aes(x = x, y = y))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim = c(-3, 3))
View(training)
cutpoints <- quantile(training$DER_mass_MMC, seq(0, 1, length = 11), na.rm = T)
cutpoints
training$no2dec <- cut(training4DER_mass_MMC, cutpoints)
training$no2dec <- cut(training$DER_mass_MMC, cutpoints)
levels(training$no2dec)
g <- ggplot(training, aes(DER_mass_vis, DER_pt_h))
g + geom_point(alpha = 1/3) + facet_wrap(PRI_jet_num ~ no2dec, nrow = 2, ncol = 4) + geom_smooth(method = "lm", se = F, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " + PM[2.5])) + labs(y = "y") + labs(title = "title")
swirl()
library(swirl)
rm(list = ls())
swirl()
library(datasets)
library(UsingR)
data(Fingerprints)
class(Fingerprints)
View(Fingerprints)
data(Prostitutes)
View(Fingerprints)
view(Prostitutes)
class(Prostitutes)
View(Fingerprints)
View(Prostitutes)
with(Prostitutes, { plot(Year, count)})
rm(Fingerprints)
dev.off()
qplot(Year, count, Prostitutes)
qplot(Year, count, data = Prostitutes)
qplot(Year, count, data = Prostitutes, color = drv)
qplot(Year, count, data = Prostitutes, color = month)
qplot(Year, count, data = Prostitutes, color = mon)
qplot(Year, count, data = Prostitutes, geom = c("point", "smooth"))
qplot(count, data = Prostitutes, fill = month)
qplot(count, data = Prostitutes, fill = mon)
qplot(count, data = Prostitutes, fill = mon)
qplot(count, data = Prostitutes, fill = month)
qplot(Year, count, data = Prostitutes, facets = .~mon)
qplot(Year, count, data = Prostitutes, facets = .~month)
qplot(count, data = Prostitutes, facets = .~month, binwidth = 2)
qplot(count, data = Prostitutes, facets = month~., binwidth = 2)
qplot(log(count), data = Prostitutes)
qplot(log(count), data = Prostitutes, fill = month)
qplot(log(count), data = Prostitutes, geom = "density")
qplot(log(count), data = Prostitutes, geom = "density", color = month)
qplot(log(Year), log(count), data = Prostitutes)
qplot(log(Year), log(count), data = Prostitutes, color = month)
qplot(log(Year), log(count), data = Prostitutes, geom = c("point", "smooth"), method = "lm", facets = .~ month)
g <- ggplot(Prostitutes, aes(Year, count))
p <- g + geom_point()
p
g + geom_smooth()
g + geom_smooth() + geom_point()
g + geom_smooth(method = "lm") + geom_point()
g + geom_point() + facet_grid(. ~ month) + geom_smooth(method = "lm")
cutpoints <- quantile(Prostitutes$count, seq(0, 1, length = 11), na.rm = T)
Prostitutes$no2dec <- cut(Prostitutes$count, cutpoints)
cutpoints
levels(Prostitutes$no2dec)
g <- ggplot(Prostitutes, aes(Year, count))
g + geom_point(alpha = 1 / 3) + facet_wrap(month ~ no2dec, nrow = 3, ncol = 4) + geom_smooth(method = "lm", se = F, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " * PM[2.5])) + labs(y = "y") + labs(title = "title")
g + geom_point(alpha = 1 / 3) + facet_wrap(month ~ no2dec, nrow = 4, ncol = 4) + geom_smooth(method = "lm", se = F, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " * PM[2.5])) + labs(y = "y") + labs(title = "title")
g + geom_point(alpha = 1 / 3) + facet_wrap(month ~ no2dec, nrow = 4, ncol = 5) + geom_smooth(method = "lm", se = F, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " * PM[2.5])) + labs(y = "y") + labs(title = "title")
g + geom_point(alpha = 1 / 3) + facet_wrap(month ~ no2dec, nrow = 5, ncol = 5) + geom_smooth(method = "lm", se = F, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " * PM[2.5])) + labs(y = "y") + labs(title = "title")
g + geom_point(alpha = 1 / 3) + facet_wrap(month ~ no2dec, nrow = 15, ncol = 15) + geom_smooth(method = "lm", se = F, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " * PM[2.5])) + labs(y = "y") + labs(title = "title")
g + geom_point(alpha = 1 / 3) + facet_wrap(month ~ no2dec, nrow = 6, ncol = 6) + geom_smooth(method = "lm", se = F, col = "steelblue") + theme_bw(base_family = "Avenir", base_size = 10) + labs(x = expression("log " * PM[2.5])) + labs(y = "y") + labs(title = "title")
warnings()
g + geom_point(alpha = 1 / 3) + facet_wrap(month ~ no2dec, nrow = 6, ncol = 6) + geom_smooth(method = "lm", se = F, col = "steelblue")
rm(list = ls())
training_f <- "training.csv"
# test_f <- "test.csv"
training <- read.csv(training_f)
colnames <- colnames(training)
n_ina <- vector("integer", length = length(colnames))
colnames
hist(training$Weight)
sum(training$Label == "s")
sum(training$Label == "b")
hist(training$Weight, breaks = 20)
hist(training$Weight, breaks = 50)
hist(training$Weight, breaks = 25)
hist(training$Weight, breaks = 30)
train <- data.frame(training)
colnames
training$DER_mass_MMC[1:5]
train$DER_mass_MMC[1:5]
training$DER_mass_MMC[1] <- 100
training$DER_mass_MMC[1:5]
train$DER_mass_MMC[1:5]
train_f <- "training.csv"
train <- read.csv(train_f)
train_no_na <- data.frame(train)
colnames <- colnames(train)
n_ina <- vector("integer", length = length(colnames))
for (col in seq_along(colnames)) {
ina <- training[, col] == -999.0
n_ina[col] <- sum(ina)
train_no_na <- train_no_na[!ina, ]
}
rm(list = ls())
train_f <- "training.csv"
train <- read.csv(train_f)
train_no_na <- data.frame(train)
colnames <- colnames(train)
n_ina <- vector("integer", length = length(colnames))
for (col in seq_along(colnames)) {
ina <- train[, col] == -999.0
n_ina[col] <- sum(ina)
train_no_na <- train_no_na[!ina, ]
}
rm(list = ls())
train_f <- "training.csv"
train <- read.csv(train_f)
train_no_na <- data.frame(train)
colnames <- colnames(train)
n_ina <- vector("integer", length = length(colnames))
for (col in seq_along(colnames)) {
ina <- train[, col] == -999.0
n_ina[col] <- sum(ina)
train_no_na <- train_no_na[!ina, ]
}
colnames <- colnames(train)
colnames
n_ina
ina <- train[, 1] == -999.0
ina
n_ina[1] <- sum(ina)
n_ina[1]
ina <- train[, 2] == -999.0
n_ina[1] <- sum(ina)
n_ina[1]
train_no_na <- train_no_na[!ina, ]
rm(list = ls())
train_f <- "training.csv"
train <- read.csv(train_f)
train_no_na <- data.frame(train)
colnames <- colnames(train)
n_ina <- vector("integer", length = length(colnames))
for (col in seq_along(colnames)) {
ina <- train[, col] == -999.0
n_ina[col] <- sum(ina)
train_no_na <- train_no_na[!ina, ]
}
head(train_no_na)
rm(train_no_na)
ina <- train[, 1] == -999.0
n_ina[1] <- sum(ina)
train_no_na <- train_no_na[!ina, ]
train_no_na <- data.frame(train)
train_no_na <- train_no_na[!ina, ]
ina <- train[, 2] == -999.0
n_ina[2] <- sum(ina)
train_no_na <- train_no_na[!ina, ]
ina <- train[, 3] == -999.0
n_ina[3] <- sum(ina)
train_no_na <- train_no_na[!ina, ]
rm(list = ls())
train_f <- "training.csv"
train <- read.csv(train_f)
train_no_na <- data.frame(train)
features <- colnames(train)
n_ina <- vector("integer", length = length(features))
for (feature in seq_along(features)) {
ina <- train[, feature] == -999.0
n_ina[feature] <- sum(ina)
}
for (feature in seq_along(features)) {
ina <- train[, feature] == -999.0\
train_no_na <- train_no_na[ina, ]
}
train_no_na <- data.frame(train)
features <- colnames(train)
n_ina <- vector("integer", length = length(features))
for (feature in seq_along(features)) {
ina <- train[, feature] == -999.0
n_ina[feature] <- sum(ina)
}
for (feature in seq_along(features)) {
ina <- train[, feature] == -999.0
train_no_na <- train_no_na[ina, ]
}
train_no_na <- data.frame(train)
features <- colnames(train)
n_ina <- vector("integer", length = length(features))
for (feature in seq_along(features)) {
ina <- train[, feature] == -999.0
n_ina[feature] <- sum(ina)
}
for (feature in seq_along(features)) {
ina <- train[, feature] == -999.0
train_no_na <- train_no_na[!ina, ]
}
for (feature in seq_along(features)) {
ina <- train_no_na[, feature] == -999.0
train_no_na <- train_no_na[!ina, ]
}
train_no_na <- data.frame(train)
features <- colnames(train)
n_ina <- vector("integer", length = length(features))
for (feature in seq_along(features)) {
ina <- train[, feature] == -999.0
n_ina[feature] <- sum(ina)
}
for (feature in seq_along(features)) {
ina <- train_no_na[, feature] == -999.0
train_no_na <- train_no_na[!ina, ]
}
summary(train_no_na)
features
n_ina
sum(train$Label == "s")
sum(train$Label == "b")
sum(train$Weight[train$Label == "s", ])
sum(train$Weight[train$Label == "s"])
sum(train$Weight[train$Label == "b"])
s_labels <- train$Label == "s"
b_labels <- train$Label == "b"
sum(s_labels)
sum(b_labels)
sum(train$Weight[s_labels])
sum(train$Weight[b_labels])
sum(train$Weight)
getwd()
setwd("higgs-ml")
getwd()
